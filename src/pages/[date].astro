---
// src/pages/[date].astro
import DiaryEntryLayout from '../layouts/DiaryEntryLayout.astro';
import { getCollection } from 'astro:content';

import { getCypherDate } from '../utils/getCypherDate.js';


export async function getStaticPaths() {
  const present = await getCollection('present-reality');
  const future = await getCollection('future-echo');
  const reflection = await getCollection('reflection-point');

  // Combine slugs (filenames without extension) across all 3 folders
  const allDates = new Set([
    ...present.map((entry) => entry.slug),
    ...future.map((entry) => entry.slug),
    ...reflection.map((entry) => entry.slug),
  ]);

  return Array.from(allDates).map((slug) => ({
    params: { date: slug },
  }));
}

const { date } = Astro.params;

const cypherTimestamp = getCypherDate(date);

import { getEntry } from 'astro:content';

// Render each block only if available
const presentHtml = presentEntry?.rendered?.html ?? `<em>No Present entry for ${date}</em>`;
const futureHtml = futureEntry?.rendered?.html ?? `<em>No Future entry for ${date}</em>`;
const reflectionHtml = reflectionEntry?.rendered?.html ?? `<em>No Reflection entry for ${date}</em>`;
---

<DiaryEntryLayout 
  date={cypherTimestamp}
  showIntent={false}
  present={presentHtml}
  future={futureHtml}
  reflection={reflectionHtml}
/>

<style>

:global(em) {
  color: #00ff88;
  font-style: normal;
  opacity: 0.6;
  text-shadow: 0 0 3px rgba(0, 255, 136, 0.4);
}

</style>