---
const { entries, title, icon, basePath, collectionType = "generic" } = Astro.props;

---

<div class="index-page">
  <h1 class="index-title">{icon} {title}</h1>

  {(collectionType === 'hook' || collectionType === 'manual' || collectionType === 'diary') && (
    <div class="hook-search">
      <label for="hookSearchInput" class="terminal-label">> search {icon.toLowerCase()} {collectionType}:</label>
      <input
        id="hookSearchInput"
        type="text"
        placeholder="Type to filter... (press / to jump)""
        class="hook-search-input"
      />
    </div>
  )}

  <ul class="index-list">
    {entries.map(entry => (
      <li class="entry-item">
  <a class="entry-link" href={`/${[basePath, entry.slug].filter(Boolean).join('/')}`}>
    <span class="entry-title">
      {icon} {entry.data.title}
    </span>
    {entry.data.summary && (
      <span class="entry-summary">
        — {entry.data.summary}
      </span>
    )}
  </a>
</li>

    ))}
  </ul>
</div>


<style>
.index-page {
  max-width: 800px;
  margin: 2rem auto;
  padding: 0 1rem;
  font-family: 'Share Tech Mono', monospace;
}

.index-title {
  font-size: 1.5rem;
  color: #00eaff;
  margin-bottom: 1rem;
}

.index-list {
  list-style: none;
  padding-left: 0;
}

.index-list a {
  color: #00ffcc;
  text-decoration: none;
  display: block;
  margin-bottom: 0.75rem;
  text-shadow: 0 0 2px #00ffcc;
}

.index-summary {
  color: #88ffff;
  font-size: 0.85rem;
}


.terminal-label {
  display: block;
  margin-bottom: 0.4rem;
  color: #00ff88;
  text-shadow: 0 0 1px #00ff88;
  font-size: 0.85rem;
}

.hook-search {
  margin-bottom: 1.5rem;
  font-family: 'Share Tech Mono', monospace;
  color: #00ff88;
}

.hook-search-input {
  position: relative;
  width: 100%;
  padding: 0.45rem 0.75rem;
  font-family: 'Share Tech Mono', monospace;
  font-size: 0.9rem;
  background-color: #001d00;
  color: #00ff88;
  border: 1px solid #00ff88;
  border-radius: 3px;
  outline: none;
  box-shadow: 0 0 3px rgba(0, 255, 136, 0.2);
  caret-color: #00ff88; /* sets the real cursor glow */
}


.hook-search-input::placeholder {
  color: #44ff99;
  opacity: 0.4;
  font-style: italic;
}

</style>

<script is:script>
  document.addEventListener('DOMContentLoaded', () => {
    const input = document.getElementById('hookSearchInput');
    const items = document.querySelectorAll('.entry-item');

    // 🔍 Press "/" to focus input from anywhere
    document.addEventListener('keydown', (e) => {
      if (e.key === '/' && document.activeElement.tagName !== 'INPUT' && document.activeElement.tagName !== 'TEXTAREA') {
        e.preventDefault();
        input?.focus();
      }
    });

    input?.addEventListener('input', () => {
      const q = input.value.toLowerCase();
      items.forEach(item => {
        const title = item.querySelector('.entry-title')?.textContent.toLowerCase() || '';
        const summary = item.querySelector('.entry-summary')?.textContent.toLowerCase() || '';
        item.style.display = title.includes(q) || summary.includes(q) ? 'block' : 'none';
      });
    });
  });
</script>


